(load "main.scm")

(define rng (new-gsl-rng (gsl-rng-default)))
(define Q (mcmclib-mh-q-guile-alloc
	   rng
	   (list
	    (lambda (x) (gv-map-ip (lambda (xi) (+ xi 1)) x))
	    (lambda (x y)
	      (abs (- (gv-get x 0) (gv-get y 0)))))))
(define x (sv->gv #(1.0)))
(define y (sv->gv #(2.0)))
(let
    ((v (sv->gv #(0.0))))
  (mcmclib-mh-q-sample Q v)
  (pass-if (= (gv-get v 0) 1.0)))
(pass-if (= (mcmclib-mh-q-logd Q x y) 1.0))
(pass-if (= (mcmclib-mh-q-ratio-offset Q x y) 0.0))
